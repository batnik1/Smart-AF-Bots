function handle_orders:
    finished=> emtpy list
    //orders are in form list of racks, human counter, order_id
    loop through orders:
        list_racks,hCounter,order_id = orders[i]
        finished_racks=[]
        loop through racks in list_racks:    
            if rack is not rack_available: //It is booked by some agent
                continue
            ind = get_Agent(rack location)
            if ind is equal to -1:
                break  // no agent currently rack_available
            rack_available of rack= False // rack_available is a list with all the racks
            agent=Agents[ind] 
            agent.goals=[rack_location,[-7,-7],hcounter number,[-14,-14],rack_location,[-21,-21]]
            agent.nearestgoals=[]
            agent.goalindex=0
            loop through goals with index xx:
                if agent.goals[xx][0]<0: // as in [-7,-7],[-14,-14],[-21,-21]
                    agent.nearestgoals <--Append<--agent.goals[xx]
                    continue
                togoal=agent.goals[xx]
                nearestIntersec=nearest_intersection(togoal,rev=True) 
                agent.nearestgoals<--Append<--nearestIntersec
             
            agent.direction="motion"
            agent.Index=-1
            finished_racks<--Append<--rack
            
            agent.Wait = False
            agent.order_id=order_id
            agent.items_carrying=list_racks[rack]
        
        loop through finished_racks:
            orders[i][0]-->pop-->rack
        if size of orders[i][0] is 0:  // If the order is completed
            finished<--Append<--orders[i]      
        finished--> empty_list 


function truck_orders():
    items-->empty_list
    loop through Truck_Agents:
        type<--random item type rack_available
        quantity<--random(1,3)
        // here random(x,y) --> random value between x to y
        shelf<--str((random(0, m-1), random(0,n-1), random(0, 4), random(0, 4)))
        items<--Append<--[type,quantity,shelf]
    return items


function dummy_sorting(key,count):
    loop from 1 to count:
        sorting_orders<--Append<--('Dummy '+key+i)


function handle_Torders:
    finished=> emtpy list
    //orders are in form list of racks, human counter, order_id
    loop through T_orders:
        type,quantity,rack = Torders[i]
        finished_racks=[]

        loop through racks in list_racks:    
            if rack is not rack_available: //It is booked by some agent
                continue
            ind = get_TAgent()
            rack_available of rack= False 
            agent=Agents[ind] 
             agent.goals=[rack_location,[-7,-7],agent.position,[-14,-14]]
            agent.nearestgoals=[]
            agent.goalindex=0
            loop through goals with index xx:
                if agent.goals[xx][0]<0: // as in [-7,-7],[-14,-14]
                    agent.nearestgoals <--Append<--agent.goals[xx]
                    continue
                togoal=agent.goals[xx]
                nearestIntersec=nearest_intersection(togoal,rev=True) 
                agent.nearestgoals<--Append<--nearestIntersec
             
            agent.direction="motion"
            agent.Index=-1
            finished_racks<--Append<--rack
            
            agent.Wait = False
            agent.order_id=order_id
            agent.items_carrying=list_racks[rack]

    loop through in Tfinished as ind:
        Torders<--remove<--ind


